apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dh-ms-general.name" . }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app:  {{ include "dh-ms-general.name" . }}
      tier: backend
      track: stable
  template:
    metadata:
      labels:
        app: dh-ms-general
        tier: backend
        track: stable
    spec:
      nodeSelector:
        kubernetes.io/os: linux
      containers:
        - name: {{ include "dh-ms-general.name" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DBUserName
              valueFrom:
                secretKeyRef:
                  name: pgcred
                  key: DBUserName
            - name: DBPassword
              valueFrom:
                secretKeyRef:
                  name: pgcred
                  key: DBPassword
            - name: DBConnectionString
              valueFrom:
                secretKeyRef:
                  name: pgcred
                  key: DBConnectionString
            {{ if and .Values.SamlIdpMetadata .Values.SamlLogoutRedirect }}
            - name: SamlIdpMetadata
              valueFrom:
                secretKeyRef:
                  name: saml
                  key: SamlIdpMetadata
            - name: SamlLogoutRedirect
              valueFrom:
                secretKeyRef:
                  name: saml
                  key: SamlLogoutRedirect
          {{ end }}
            - name: NGINX
              value: "{{ .Values.internal_nginx }}"
          ports:
            - name: http
              containerPort: 8080
